#!/home/ls807terra/Programs/anaconda3/envs/env_R4.1/bin/Rscript --vanilla
## ChIPseeker compare different MACS peaks
## version R4.1.3
# ----------------------------------------------------------------------------------------- #
# Option parser
pacman::p_load("optparse")

option_list = list(
  make_option(c("-p", "--peaks_files"), type="character", default=NULL,
              help="input multiple MACS call peaks file path", metavar="MACS_Peak1,MACS_Peak2, ..."),
  make_option(c("-o", "--outdir"), type="character", default="./",
              help="output directory [default= %default]", metavar="OUTPUT"),
  make_option(c("-r", "--range"), type="integer", default=3000,
              help="Promoter range [default= %default]", metavar="range"),
  make_option(c("-n", "--name_prefix"), type="character", default=NA,
              help="Output files name [default= %default]", metavar="name"),
  make_option(c("-e", "--experiment_name"), type="character", default=NULL,
              help="Set names of different exp. groups in figures", metavar="exp1,exp2"),
  make_option(c("-d", "--database"), type="character", default="mm10",
              help="User defined sqlite database, set 'mm10' for mouse 'hg38' for human [default= %default]", 
              metavar="database or path_to_sqlite")
)

opt_parser = OptionParser(option_list=option_list)
opt = parse_args(opt_parser)

#
if (is.null(opt$peaks_files)){
  print_help(opt_parser)
  stop("At least one argument must be supplied (input files).n", call.=FALSE)
}else if (length(unlist(strsplit(opt$peaks_files, ",")))<2){
  #stop("At least 2 peak files must be supplied (input files).n", call.=FALSE)
}

user_genome = FALSE
#
if (opt$database=="mm10"){
  print("Use default mm10 database: TxDb.Mmusculus.UCSC.mm10.knownGene")
  library("TxDb.Mmusculus.UCSC.mm10.knownGene")
  db <- TxDb.Mmusculus.UCSC.mm10.knownGene
}else if (opt$database=="hg38"){
  print("Use default hg38 database: TxDb.Hsapiens.UCSC.hg38.knownGene")
  library("TxDb.Hsapiens.UCSC.hg38.knownGene")
  db <- TxDb.Hsapiens.UCSC.hg38.knownGene
}else{
  db <- opt$database
  user_genome = TRUE
  print(paste0("User define database, sqlite path = ",db))
}
# ----------------------------------------------------------------------------------------- #
# Load ChIPseeker and annotation table
pacman::p_load(ChIPseeker,GenomicFeatures,AnnotationDbi,ggupset,ggimage)
# Input parameters
peak.files <- unlist(strsplit(opt$peaks_files,","))
if (is.null(opt$experiment_name)){
  peak.name <- peak.files
}else {
  peak.name <- unlist(strsplit(opt$experiment_name,","))
}
database <- db
promoter_range = opt$range
output_path = opt$outdir
saved_name <- opt$name_prefix
s <- sapply(peak.files,print)
print(paste("promoter_range:",promoter_range))
print(paste0("output:",output_path,saved_name))
# ----------------------------------------------------------------------------------------- #
print("Load peak files & annotation database...")
# Load annotation database
if (user_genome){
  txdb <- loadDb(file = database)
}else{
  txdb <- database
}
# Create Annotation list
peakAnnoList <- lapply(
  peak.files, annotatePeak, TxDb=txdb,
  tssRegion=c(-promoter_range, promoter_range), verbose=FALSE
)
names(peakAnnoList) <- peak.name
print("Ok")
# ----------------------------------------------------------------------------------------- #
print("Annotating peaks...")
pdf(
  file = paste0(output_path,saved_name,"peak annotaion",".pdf"),
  width = 6, height = 3, title = "ChIPseeker", 
  colormodel = "cmyk",compress = F
)
plotAnnoBar(peakAnnoList)
dev.off()
print(paste0(output_path,saved_name," peaks annotation ","Saved."))
# ----------------------------------------------------------------------------------------- #
pdf(
  file = paste0(output_path,saved_name,"peak distribution TSS",".pdf"),
  width = 6, height = 3, title = "ChIPseeker", 
  colormodel = "cmyk",compress = F
)
plotDistToTSS(peakAnnoList)
dev.off()
print(paste0(output_path,saved_name," peak distribution TSS ","Saved."))
# ----------------------------------------------------------------------------------------- #
# Annotate peaks at TSS 3kb (promoter)
print(paste("Annotate Promoter region +, -",promoter_range,"bp..."))
promoter <- getPromoters(
  TxDb=txdb, 
  upstream=promoter_range, 
  downstream=promoter_range
)
tagMatrixList <- lapply(
  peak.files, getTagMatrix, windows=promoter
)
names(tagMatrixList) <- peak.name
print("Ok")
# ----------------------------------------------------------------------------------------- #
print("Plot peaks frequency at TSS...")
pdf(
  file = paste0(output_path,saved_name," peak freq TSS",".pdf"),
  width = 10, height = 12, title = "ChIPseeker", 
  colormodel = "cmyk",compress = F
)
tagHeatmap(
  tagMatrixList, 
  xlim=c(-promoter_range, promoter_range), 
  color=NULL
)
dev.off()
print(paste0(output_path,saved_name," peak freq at TSS ","Saved."))
# ----------------------------------------------------------------------------------------- #
# Plot histogram
print("Plot peaks histogram at TSS...")
pdf(
  file = paste0(output_path,saved_name,"peak_hist_TSS",".pdf"),
  width = 8, height = 5, title = "ChIPseeker", 
  colormodel = "cmyk",compress = F
)
plotAvgProf(
  tagMatrixList, xlim=c(-promoter_range, promoter_range),
  xlab="Genomic Region (5'->3')", 
  ylab = "Peaks occur Frequency"
)
dev.off()
print(paste0(output_path,saved_name,"peak histogram at TSS ","Saved."))
# ----------------------------------------------------------------------------------------- #
# Plot metagene plot
# Load peak files list
peaks <- lapply(
  peak.files, readPeakFile
)
names(peaks) <- peak.name
# ----------------------------------------------------------------------------------------- #
print("Plot peaks metagene plot...")
pdf(
  file = paste0(output_path,saved_name,"peak metagene",".pdf"),
  width = 8, height = 5, title = "ChIPseeker", 
  colormodel = "cmyk",compress = F
)
plotPeakProf2(peak = peaks, upstream = rel(0.2), downstream = rel(0.2),
              conf = 0.95, by = "gene", type = "body", nbin = 50,
              TxDb = txdb,ignore_strand = F, facet="row")
dev.off()
print(paste0(output_path,saved_name,"peak metagene ","Saved."))
# ----------------------------------------------------------------------------------------- #
print("Plot peaks metagene plot...")
pdf(
  file = paste0(output_path,saved_name,"peak metagene combine",".pdf"),
  width = 8, height = 5, title = "ChIPseeker", 
  colormodel = "cmyk",compress = F
)
plotPeakProf2(peak = peaks, upstream = rel(0.2), downstream = rel(0.2),
              conf = 0.95, by = "gene", type = "body", nbin = 50,
              TxDb = txdb,ignore_strand = F)
dev.off()
print(paste0(output_path,saved_name,"peak metagene combine ","Saved."))
# ----------------------------------------------------------------------------------------- #
